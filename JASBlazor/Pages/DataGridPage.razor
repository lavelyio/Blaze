@page "/grid"

@using System.Diagnostics
@using JASBlazor.ViewModels
@using JASBlazor.Components
@using System.ComponentModel
@using JASBlazor.Data

@inject JASDBContext DbContext
@inject IDataGridViewModel ViewModel
@implements IDisposable

<CascadingValue Value=@ViewModel Name="ViewModel">
    <DataGrid />
</CascadingValue>

@code {

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitializeAsync(DbContext);

        ViewModel.PropertyChanged += async (sender, e) =>
        {
            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        };

        await base.OnInitializedAsync();
    }

    async void OnPropertyChangedHandler(object sender, PropertyChangedEventArgs e)
    {
        Debug.WriteLine("Property Changed: " + sender.ToString());
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    public void Dispose()
    {
        ViewModel.PropertyChanged -= OnPropertyChangedHandler;
    }
 }